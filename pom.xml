<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.ozzysoft.docker</groupId>
  <artifactId>parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Docker</name>
  <description>Docker image generation</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

<!--    <docker.image.prefix>patrickosborne</docker.image.prefix>-->
    <docker.image.prefix>gcr.io/crossbow-v1</docker.image.prefix>

    <!-- plugins -->
    <resources.plugin.version>2.4</resources.plugin.version>
    <git.commit.plugin.version>2.2.4</git.commit.plugin.version>

    <spotify.docker.plugin.version>1.0.0</spotify.docker.plugin.version>

    <maven.dependency.plugin.version>3.0.0</maven.dependency.plugin.version>
    <maven.release.plugin.version>2.5.3</maven.release.plugin.version>
    <maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>

    <test.skip.integration>false</test.skip.integration>
  </properties>

  <scm>
    <developerConnection>git@github.com:PatrickOsborne/docker.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <modules>
    <module>mongo</module>
  </modules>

  <dependencyManagement>
    <dependencies>
    </dependencies>
  </dependencyManagement>

  <dependencies>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven.dependency.plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven.release.plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven.deploy.plugin.version}</version>

          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${resources.plugin.version}</version>
          <configuration>
            <overwrite>true</overwrite>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>

        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${git.commit.plugin.version}</version>

          <executions>
            <execution>
              <goals>
                <goal>revision</goal>
              </goals>
            </execution>
          </executions>

          <configuration>
            <verbose>true</verbose>

            <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
            <injectAllReactorProjects>true</injectAllReactorProjects>

            <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
            <generateGitPropertiesFile>true</generateGitPropertiesFile>
            <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>

            <failOnNoGitDirectory>false</failOnNoGitDirectory>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
    </plugins>
  </build>

  <repositories>
  </repositories>

  <pluginRepositories>
  </pluginRepositories>

  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
            <version>${git.commit.plugin.version}</version>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>revision</goal>
                </goals>
              </execution>
            </executions>

            <configuration>
              <verbose>true</verbose>

              <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
              <injectAllReactorProjects>true</injectAllReactorProjects>

              <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
              <generateGitPropertiesFile>true</generateGitPropertiesFile>
              <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>

              <failOnNoGitDirectory>true</failOnNoGitDirectory>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${spotify.docker.plugin.version}</version>

            <configuration>
              <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
              <dockerDirectory>${project.basedir}</dockerDirectory>
              <skipDocker>true</skipDocker>
            </configuration>

            <executions>
              <execution>
                <id>build-image</id>
                <phase>install</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>

              <execution>
                <id>tag-image-latest</id>
                <phase>install</phase>
                <goals>
                  <goal>tag</goal>
                </goals>
                <configuration>
                  <image>${docker.image.prefix}/${project.artifactId}</image>
                  <newName>${docker.image.prefix}/${project.artifactId}:latest</newName>
                </configuration>
              </execution>

              <execution>
                <id>tag-image-version</id>
                <phase>install</phase>
                <goals>
                  <goal>tag</goal>
                </goals>
                <configuration>
                  <image>${docker.image.prefix}/${project.artifactId}</image>
                  <newName>${docker.image.prefix}/${project.artifactId}:${project.version}</newName>
                </configuration>
              </execution>

              <execution>
                <id>tag-image-commit-id</id>
                <phase>install</phase>
                <goals>
                  <goal>tag</goal>
                </goals>
                <configuration>
                  <image>${docker.image.prefix}/${project.artifactId}</image>
                  <newName>${docker.image.prefix}/${project.artifactId}:${git.commit.id.abbrev}
                  </newName>
                </configuration>
              </execution>

              <execution>
                <id>push-image-latest</id>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <serverId>docker-hub</serverId>
                  <registryUrl>https://index.docker.io/v1/</registryUrl>
                  <imageName>${docker.image.prefix}/${project.artifactId}:latest</imageName>
                </configuration>
              </execution>

              <execution>
                <id>push-image-version</id>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <serverId>docker-hub</serverId>
                  <registryUrl>https://index.docker.io/v1/</registryUrl>
                  <imageName>${docker.image.prefix}/${project.artifactId}:${project.version}
                  </imageName>
                </configuration>
              </execution>

              <execution>
                <id>push-image-git-commit</id>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <serverId>docker-hub</serverId>
                  <registryUrl>https://index.docker.io/v1/</registryUrl>
                  <imageName>${docker.image.prefix}/${project.artifactId}:${git.commit.id.abbrev}
                  </imageName>
                </configuration>
              </execution>

            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
